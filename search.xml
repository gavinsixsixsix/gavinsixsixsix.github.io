<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>h5-移动端适配</title>
      <link href="2021/03/12/h5-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
      <url>2021/03/12/h5-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="移动适配布局"><a href="#移动适配布局" class="headerlink" title="移动适配布局"></a>移动适配布局</h3><ul><li>h5 是 HTML5 的简称<ul><li>浏览器的厂商   IE(Edge)、firefox、chrome(chromium)、safari(webkit)、Opera【渲染引擎】</li></ul></li><li> html5是html的第五个版本，2014年W3C（万维网联盟），宣布HTML5正式定稿，致力于web applications 的开发与移动端设备的交互。</li><li>html5是一个标准，也是一套解决方案，这套解决方案可以利用html + css + js实现更高级的用户体验和开发体验。（html5 + css 3 + js es5 es 6….)<ul><li>header、footer、video、audio、canvas…(html 标签 W3c标准中  结构标准，更多注重的 语义化)<ul><li>html   emmbed   frame</li></ul></li><li>header:first-child{}、input[id=’btn’]  [一个 : 表示 的是伪类 ，两个冒号 表示的是伪元素，一个冒号也可以表示伪元素。]<ul><li><code>&lt;br /&gt;</code>   <code>:</code></li></ul></li><li>拖拽</li><li>手指触摸事件</li><li>本地存储</li><li>离线存储</li><li>网络状态</li><li>语音识别</li><li>多媒体</li><li>陀螺仪</li><li>摄像头</li><li>websocket通信</li><li>…</li></ul></li><li>H5(遵循html5标准开发的项目)可以运行在windows、mac、iPhone、Android等平台设备上。</li><li>通常的H5项目，指的是移动端网页项目。</li><li>…</li></ul><h3 id="H5适配"><a href="#H5适配" class="headerlink" title="H5适配"></a>H5适配</h3><h4 id="1-为什么要适配"><a href="#1-为什么要适配" class="headerlink" title="1.为什么要适配"></a>1.为什么要适配</h4><p>a) 为了适应各种移动端设备，完美呈现应有的布局效果  </p><p>b) 各个移动端设备，分辨率大小不一致，网页想铺满整个屏幕，并在各种分辨下等比缩放</p><p>现在主流的开发思路</p><ol><li><p>PC端 和移动端 分开开发(    分开开发  也是要写 两套代码)</p></li><li><p>如果想在既能适应PC、又能适应移动端 响应式开发（麻烦 写好多套css ）</p></li></ol><h4 id="2-概念知识"><a href="#2-概念知识" class="headerlink" title="2.概念知识"></a>2.概念知识</h4><h5 id="2-1-屏幕尺寸"><a href="#2-1-屏幕尺寸" class="headerlink" title="2.1 屏幕尺寸"></a>2.1 屏幕尺寸</h5><ul><li>屏幕对角线的长度，单位是英寸。</li><li>1英寸=2.54厘米，6*2.54 = 15.24厘米</li></ul><p><img src="assets/u=2045279245,1212873056&amp;fm=26&amp;gp=0.jpg" alt="显示器屏幕尺寸"></p><p><img src="assets/timg.jpg" alt="移动设备屏幕尺寸"></p><h5 id="2-2-屏幕分辨率"><a href="#2-2-屏幕分辨率" class="headerlink" title="2.2 屏幕分辨率"></a>2.2 屏幕分辨率</h5><ul><li>像素：像素是由图像的小方格组成，小方格都有一个明确的位置和倍分配的色彩值。</li><li>在横纵方向上的像素点，单位是px，1px=1个像素点（这里的1像素指的是物理设备的1个像素点） pixel</li><li>屏幕分辨率越高，显示效果越精细。（分辨率  指的 像素点的个数）</li><li>iPhoe 6的分辨率是1334*750像素，一般是纵向像素*横向像素来表示一个手机的分辨率</li><li>1080P(P指的是逐行扫描)、2K、4K</li></ul><p><img src="assets/u=2848526157,1078108996&amp;fm=26&amp;gp=0.jpg" alt="屏幕分辨率"></p><h5 id="2-3-像素密度"><a href="#2-3-像素密度" class="headerlink" title="2.3 像素密度"></a>2.3 像素密度</h5><ul><li><p>屏幕分辨率与尺寸构成了像素密度。  </p></li><li><p>屏幕上每英寸可以显示的像素点数量，单位是ppi（pixels per inch的缩写）  2.54厘米  能显示多少个像素点  600</p></li><li><p>屏幕像素密度与屏幕分辨率和屏幕尺寸有关，像素密度越高，屏幕能够以越高的密度显示图像。</p><p><img src="assets/959448.jpg" alt="像素密度"></p><img src="assets/984702-20170412163336783-427220997.png" alt="iPhone PPI" style="zoom:67%;"></li></ul><h5 id="2-4-css像素"><a href="#2-4-css像素" class="headerlink" title="2.4 css像素"></a>2.4 css像素</h5><ul><li>css像素是为web开发者根据设计图表示web页面上内容大小的抽象单位，主要使用在浏览器上</li><li>px是一个相对单位，由开发者来使用，也称为逻辑像素。（代码概念、逻辑概念）</li><li>一个标准的显示密度下（普通屏），一个css像素对应着一个设备像素。在页面<strong>不缩放</strong>的情况下，1px的CSS像素 === 1设备独立像素</li><li>页面放大200%时，页面的设备独立像素依旧不变，<strong>放大的是CSS像素</strong>。但是此时CSS像素与设备独立像素的关系变化了，1px === 4独立像素（宽x2，高x2），经过计算机计算，内部  原本设定 1px  ，变成  2px</li></ul><h5 id="2-5-设备像素-物理像素"><a href="#2-5-设备像素-物理像素" class="headerlink" title="2.5 设备像素/物理像素"></a>2.5 设备像素/物理像素</h5><ol><li>显示器的最小物理单位（对于一个显示器来说是<strong>固定</strong>的）</li><li>以手机屏幕为例，屏幕上的真实像素</li><li>设备出厂时候的一个宽高（device pixels）</li></ol><h5 id="2-6-Css像素与物理像素的关系"><a href="#2-6-Css像素与物理像素的关系" class="headerlink" title="2.6 Css像素与物理像素的关系"></a>2.6 Css像素与物理像素的关系</h5><ul><li>div {width: 100px;} 表示占据了100个像素 ，在普通屏幕，pc端所有的屏幕都是普通屏幕，100px</li><li>100个像素占据多少个物理像素，取决于屏幕的特性（是否高密度，像素比）和用户的缩放行为</li><li>iPhone 6的Retina HD 高清视网膜显示屏中，因为视网膜的像素密度是普通屏幕的2倍，所以这个div就占了200个设备像素，如果用户放大，它将占据更多的设备像素。如 iPhone 6 plus ，就会占300个像素。</li><li>在正常情况下，普通屏幕中，假设  ppi 为 100，  他的ppi  2 * 100 ，  每英寸  有 200个像素点。</li></ul><h5 id="2-7-设备独立像素"><a href="#2-7-设备独立像素" class="headerlink" title="2.7 设备独立像素"></a>2.7 设备独立像素</h5><ul><li>密度无关像素，可以认为是计算机坐标系中的一个点，这个点代表一个由程序员使用的虚拟像素（Css设置的像素），然后由相关设备转换成物理像素，去显示对应的大小。</li><li>设备独立像素是一个总体概念，包括了Css像素。</li><li>对于开发者来说，并不在意一个Css像素到底跨越了多少个设备像素，因为Css和Js定义的像素本质上代表的都是Css像素，如何显示对应的大小依赖于屏幕特性和用户缩放程度的复杂计算交给了浏览器。</li><li>开发的时候，你不需要去关心，你写的代码 ，在屏幕设备上 到底占用了多少像素，浏览器会经过计算 屏幕 密度 和  缩放。</li><li>通过 window.screen.width/ window.screen.height 查看 375</li></ul><h5 id="2-8-像素比-dpr"><a href="#2-8-像素比-dpr" class="headerlink" title="2.8 像素比(dpr)"></a>2.8 像素比(dpr)</h5><ul><li>devicePixelRatio指的是物理像素和设备独立像素的比 即1独立像素由多少物理像素渲染。</li><li>window.devicePixelRatio可查看</li><li>设备像素比 devicePixelRatio = 物理像素/独立像素</li></ul><p><img src="assets/9922af495a6d4de095e34ee40f4496dd.webp" alt="像素比"></p><h5 id="2-9-位图像素"><a href="#2-9-位图像素" class="headerlink" title="2.9 位图像素"></a>2.9 位图像素</h5><ul><li><p>一个位图像素是栅格图像（png、jpg、gif等）最小的数据单元，至少1个位图像素对应1个物理像素，图片才能得到完美清晰的展示。</p></li><li><p>在Retina屏幕下，会出现位图像素点不够的情况，导致图片模糊的情况。</p></li><li><p>对于dpr = 2的屏幕，一个位图像素对应4个物理像素，由于单个位图像素不可以再进一步分割，所以就进去色，导致图片模糊。</p></li><li><p>如200*300的img标签，需要提供400*600的图片，在Retina屏幕下，位图像素就可以和物理像素形成1:1的比例。</p><p><img src="assets/1350042-20180504112651805-1723549676.png" alt="位图像素"></p></li></ul><h5 id="2-10-1像素问题"><a href="#2-10-1像素问题" class="headerlink" title="2.10 1像素问题"></a>2.10 1像素问题</h5><p>因为不同设备具有不同的dpr + 所代表的设备像素不同, 所以在有些设备上看到的粗,有些设备看到的细,如何解决一像素边框问题,</p><p>方法一</p><p>通过媒体查询,查询设备的dpr,根据dpr设置不同的宽度大小</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span>{</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>:<span class="number">1px</span> solid red;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">-webkit-min-device-pixel-ratio</span>: <span class="number">2</span>) {</span><br><span class="line">    <span class="selector-id">#box</span> { <span class="attribute">border-bottom</span>: <span class="number">0.5px</span> solid <span class="number">#999</span> }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">-webkit-min-device-pixel-ratio</span>: <span class="number">3</span>) {</span><br><span class="line">    <span class="selector-id">#box</span>{ <span class="attribute">border-bottom</span>: <span class="number">0.333333px</span> solid blue }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>缺点: 小数像素目前兼容性较差，一些以前的版本可能不支持。</p><p>理论上最小的单位是 1px。 所以会出现有的设备写 0.5px 无效（没有边框）的情况。</p><p>方法二: </p><p>借助伪元素缩放处理</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button</span>:after{</span><br><span class="line">    content: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">#999</span> solid <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(<span class="number">0.5</span>); <span class="comment">/* 将 1px 的线条缩小为原来的 50% */</span></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>缺点:  不是所有设备的dpr都是2  所以固定缩放0.5 也会有问题</p><p>方法三</p><p>借助媒体查询和伪元素缩放来解决</p><figure class="highlight less"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义mixin</span></span><br><span class="line"><span class="selector-class">.border-1px</span>(<span class="variable">@color</span>: rgba(<span class="number">7</span>,<span class="number">17</span>,<span class="number">27</span>,<span class="number">0.2</span>)){</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">after</span>{</span><br><span class="line">        <span class="attribute">display</span>:block;</span><br><span class="line">        <span class="attribute">position</span>:absolute;</span><br><span class="line">        <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">        <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">        <span class="attribute">content</span>:<span class="string">''</span>;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">border-top</span>:<span class="number">1px</span> solid <span class="variable">@color</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据不同的dpr 使用不同的缩放</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">-webkit-min-device-pixel-ratio</span>: <span class="number">1.5</span>),(<span class="attribute">min-device-pixel-ratio</span>: <span class="number">1.5</span>){</span><br><span class="line">    <span class="selector-class">.border-1px</span> {</span><br><span class="line">        <span class="selector-class">.border-1px</span>;</span><br><span class="line">        <span class="selector-tag">&amp;</span>:<span class="selector-tag">after</span> {</span><br><span class="line">            -webkit-<span class="attribute">transform</span>: scaleY(<span class="number">0.7</span>);</span><br><span class="line">            -moz-<span class="attribute">transform</span>: scaleY(<span class="number">0.7</span>);</span><br><span class="line">            -ms-<span class="attribute">transform</span>: scaleY(<span class="number">0.7</span>);</span><br><span class="line">            -o-<span class="attribute">transform</span>: scaleY(<span class="number">0.7</span>);</span><br><span class="line">            <span class="attribute">transform</span>: scaleY(<span class="number">0.7</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">-webkit-min-device-pixel-ratio</span>: <span class="number">2</span>),(<span class="attribute">min-device-pixel-ratio</span>: <span class="number">2</span>){</span><br><span class="line">    <span class="selector-class">.border-1px</span> {</span><br><span class="line">        <span class="selector-class">.border-1px</span>;</span><br><span class="line">        <span class="selector-tag">&amp;</span>:<span class="selector-tag">after</span> {</span><br><span class="line">            -webkit-<span class="attribute">transform</span>: scaleY(<span class="number">0.5</span>);</span><br><span class="line">            -moz-<span class="attribute">transform</span>: scaleY(<span class="number">0.5</span>);</span><br><span class="line">            -ms-<span class="attribute">transform</span>: scaleY(<span class="number">0.5</span>);</span><br><span class="line">            -o-<span class="attribute">transform</span>: scaleY(<span class="number">0.5</span>);</span><br><span class="line">            <span class="attribute">transform</span>: scaleY(<span class="number">0.5</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">-webkit-min-device-pixel-ratio</span>: <span class="number">3</span>),(<span class="attribute">min-device-pixel-ratio</span>: <span class="number">3</span>){</span><br><span class="line">    <span class="selector-class">.border-1px</span> {</span><br><span class="line">        <span class="selector-class">.border-1px</span>;</span><br><span class="line">        <span class="selector-tag">&amp;</span>:<span class="selector-tag">after</span> {</span><br><span class="line">            -webkit-<span class="attribute">transform</span>: scaleY(<span class="number">0.3</span>);</span><br><span class="line">            -moz-<span class="attribute">transform</span>: scaleY(<span class="number">0.3</span>);</span><br><span class="line">            -ms-<span class="attribute">transform</span>: scaleY(<span class="number">0.3</span>);</span><br><span class="line">            -o-<span class="attribute">transform</span>: scaleY(<span class="number">0.3</span>);</span><br><span class="line">            <span class="attribute">transform</span>: scaleY(<span class="number">0.3</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="3-viewport"><a href="#3-viewport" class="headerlink" title="3. viewport"></a>3. viewport</h4><p>视图  view   端口 port</p><h5 id="2-1-什么是视口"><a href="#2-1-什么是视口" class="headerlink" title="2.1 什么是视口"></a>2.1 什么是视口</h5><p>在移动端viewport视口就是浏览器显示页面内容的屏幕区域,在viewport中有两种视口,分别表示为 : visual viewport (可视视口/视觉) 和 layout viewport (布局视口),两个视口是叠加在一起</p><ul><li><p>布局视口 Layout Viewport</p><ul><li>指网页的宽度，一般移动端浏览器默认设置了布局视口的宽度，根据设备不同，默认宽度可能不同。</li><li>768、980、1024等，通过<code>document.documentElement.clientWidth</code>获取。</li><li>之所有采用默认设置，是为了解决早期pc端页面在手机上显示的问题。</li></ul><p><img src="assets/20200910162534756.png" alt="布局视口"></p></li><li><p>视觉视口 Visual Viewport</p><ul><li><p>指用户正在看到的页面区域，这个区域等同于移动设备浏览器窗口宽度。</p></li><li><p>当手机中缩放页面时，操作的是视觉视口，布局视口仍然保持原来宽度。</p><p><img src="assets/20200910162647164.png" alt="视觉视口"></p></li></ul></li><li><p>理想视口  Ideal Viewport</p><ul><li><p>指对设备来讲最理想的视口尺寸。使网页在移动端浏览器上获得最理想的浏览阅读宽度。</p></li><li><p>理想视口情况下，布局视口的大小和屏幕宽度保持一致，这样就不会出现左右滚动页面。</p></li><li><p>开发中，为了实现理想视口，给移动端网页配置meta标签，通知浏览器处理。</p><p><img src="assets/20200910162708498.png" alt="理想视口"></p></li></ul></li></ul><h5 id="2-2-视口的设置"><a href="#2-2-视口的设置" class="headerlink" title="2.2 视口的设置"></a>2.2 视口的设置</h5><p>通过<code>&lt;meta&gt;</code>标签进行设置,name属性指定viewport的值,  content属性进行视口配置</p><table><thead><tr><th align="center">取值</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">width</td><td align="center">设置layout view的宽度为特定值  device-width表示设备的宽度</td></tr><tr><td align="center">height</td><td align="center">设置layout view的宽度为特定值,一般不设置</td></tr><tr><td align="center">initial-scale</td><td align="center">设置页面初始缩放</td></tr><tr><td align="center">minimum-scale</td><td align="center">设置页面最小缩放</td></tr><tr><td align="center">maximum-scale</td><td align="center">设置页面的最大缩放</td></tr><tr><td align="center">user-scalable</td><td align="center">设置页面能否缩放   yes/no</td></tr></tbody></table><ul><li>meta 原本是 safari 浏览器的一个html 扩展标签，被很多浏览器复用。viewport 用于设置 layout的宽度。</li></ul><p><a href="http://gs.statcounter.com/">http://gs.statcounter.com</a>   浏览器市场占比</p><h4 id="4、自适应适配方案-布局方案"><a href="#4、自适应适配方案-布局方案" class="headerlink" title="4、自适应适配方案(布局方案)"></a>4、自适应适配方案(布局方案)</h4><h5 id="4-1-先了解一些单位"><a href="#4-1-先了解一些单位" class="headerlink" title="4.1 先了解一些单位"></a>4.1 先了解一些单位</h5><ol><li> px: 本质上是相对单位，但是由于 pc端 都是普通屏幕，而移动端都是相对于 设备独立像素开发，所以，可以看成是绝对单位。</li><li>em: 相对单位, 1em等于当前元素的font-size值<ul><li>如果本级元素没有设置字号，则会遵守css继承规则</li><li>在父级都没有设置字体的情况下，会继承浏览器默认的设置</li><li>目前大部分浏览器的默认字体大小是 16px，所以取默认值，可以根据浏览器进行设置</li><li>如果做响应式的话，em无疑是比较适合的，但是我们需要频繁去设置字体</li></ul></li><li>rem 相对单位 r -&gt; root 根节点( html ) 根据html的字体大小计算其他元素尺寸  1rem 就是html的font-size值<ul><li>rem 与本级元素字号无关</li><li>rem与父级元素字号无关</li><li>em只根据 根节点 html的字号来进行参考，在没有设置的情况下，取浏览器的默认值 16</li><li>但是这是不可控的，所以为了统一标准，还是要事先进行设置</li><li>rem的出现 其实就是 弥补 em的不足，用来更好的进行响应式布局</li></ul></li><li>vw/vh ;  把屏幕分为100份, 1vw就等于屏幕宽度的1%<ul><li>vw和vh 是相对于 设备的尺寸来进行布局</li></ul></li></ol><p>几种适配方案：</p><p>百分比、媒体查询、rem、固定宽度、vw</p><h5 id="4-2-百分比与Flex布局"><a href="#4-2-百分比与Flex布局" class="headerlink" title="4.2 百分比与Flex布局"></a>4.2 百分比与Flex布局</h5><p>布局的特性: 关键元素高宽和位置都不变，只有容器元素在做伸缩变换</p><p>这种布局是一种典型的弹性布局</p><ul><li><p>布局的方式:</p><ol><li>布局盒子采用百分比</li><li>容器盒子与文字采用固定大小</li><li>Flex 确定位置(也可以采用浮动)</li></ol></li><li><p>优缺点:</p><ol><li>好处: 大屏下可以展示更多内容</li><li>坏处: 宽屏下比例会比较不协调  </li></ol></li></ul><blockquote><p> 注意: 这种情况css尺寸单位用px就好，不要用rem，避免增加复杂度。</p></blockquote><p>例子: <a href="https://m.lagou.com/">【拉勾网】</a>, <a href="http://i.meituan.com/">【美团】</a></p><h5 id="4-3-媒体查询"><a href="#4-3-媒体查询" class="headerlink" title="4.3 媒体查询"></a>4.3 媒体查询</h5><p><code>meida queries</code> 的方式可以说是早期采用的布局方式，它主要是通过查询设备的宽度来执行不同的 <code>css</code> 代码，最终达到界面的配置。核心语法是：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) { <span class="comment">/*当屏幕尺寸小于600px时，应用下面的CSS样式*/</span></span><br><span class="line">  <span class="comment">/*你的css代码*/</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>优点</strong></p><ol><li>方法简单，成本低，特别是对移动和PC维护同一套代码的时候。</li><li>调整屏幕宽度的时候不用刷新页面即可响应式展示</li></ol><p><strong>缺点</strong></p><ol><li>代码量比较大，维护不方便</li><li>为了兼顾大屏幕或高清设备，会造成其他设备资源浪费，特别是加载图片资源</li><li>为了兼顾移动端和PC端各自响应式的展示效果，难免会损失各自特有的交互方式</li></ol><h5 id="4-4-rem布局"><a href="#4-4-rem布局" class="headerlink" title="4.4 rem布局"></a>4.4 rem布局</h5><p>布局的特性: 关键元素盒子大小与文字都随着屏幕大小不同,而展示不同的大小</p><ul><li><p>布局的方式:</p><ol><li>根据屏幕大小不同设置html不同的字体大小</li><li>所有的盒子尺寸和文字大小采用rem的布局方式</li></ol></li><li><p>动态设置font-size</p></li><li><p>设置方式</p></li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> html = <span class="built_in">document</span>.documentElement;</span><br><span class="line"><span class="keyword">const</span> width = html.getBoundingClientRect().width;</span><br><span class="line">html.style.fontSize = width / <span class="number">7.5</span> + <span class="string">'px'</span>;</span><br><span class="line"><span class="comment">//  因为一般设计图都是 750px的，所以 整除 7.5 ，换算的时候比较方便</span></span><br></pre></td></tr></tbody></table></figure><p>字体也可以不使用rem单位(通常也不建议字体用rem单位), 采用不同的媒介方式,</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">321px</span>){</span><br><span class="line">    <span class="selector-class">.basesize</span>{<span class="attribute">font-size</span>:<span class="number">15px</span>}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>:<span class="number">321px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">400px</span>){</span><br><span class="line">    <span class="selector-class">.basesize</span>{<span class="attribute">font-size</span>:<span class="number">16px</span>}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>:<span class="number">400px</span>){</span><br><span class="line">    <span class="selector-class">.basesize</span>{<span class="attribute">font-size</span>:<span class="number">18px</span>}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果只是希望盒子根据屏幕大小不同而改变, 但是文字大小不改变,可以在body重新固定文字大小</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>{</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>代表网站</p><p><a href="https://3g.163.com/">【网易】</a>、<a href="https://main.m.taobao.com/">【淘宝】</a></p><h5 id="4-5-固定缩放布局"><a href="#4-5-固定缩放布局" class="headerlink" title="4.5 固定缩放布局"></a>4.5 固定缩放布局</h5><p>.固定高度宽度.文字大小，通过改变缩放比例适配</p><p>根据屏幕的分辨率动态设置适配缩放比例，达到等比缩放的功能</p><p>根据dpr来设置不同的viewport缩放比例</p> <figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 改变视口的缩放比例</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="keyword">const</span> width = <span class="built_in">window</span>.screen.width;</span><br><span class="line">    <span class="keyword">const</span> fixWidth = <span class="number">750</span>; <span class="comment">// 根据设计图来</span></span><br><span class="line">    <span class="keyword">const</span> ratio = width / fixWidth;</span><br><span class="line">    <span class="keyword">const</span> meta = <span class="built_in">document</span>.querySelector(<span class="string">'meta[name=viewport]'</span>)</span><br><span class="line">    meta.setAttribute(</span><br><span class="line">        <span class="string">'content'</span>,</span><br><span class="line">        <span class="string">'width='</span> +</span><br><span class="line">        fixWidth +</span><br><span class="line">        <span class="string">', initial-scale='</span> +</span><br><span class="line">        ratio +</span><br><span class="line">        <span class="string">', maximum-scale='</span> +</span><br><span class="line">        ratio +</span><br><span class="line">        <span class="string">', user-scalable=no'</span></span><br><span class="line">    );</span><br><span class="line">})()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p> 代表网站:</p><p><a href="https://www.tmall.com/">【天猫】</a></p><h5 id="4-6通过vw设置-html-字体"><a href="#4-6通过vw设置-html-字体" class="headerlink" title="4.6通过vw设置 html 字体"></a>4.6通过vw设置 html 字体</h5><ul><li>1vw 代表 屏幕的 1%</li></ul><p>以iphone6为例 375px=100vw  1vw = 3.75<br>如果我希望 html的字体大小是100px</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>{</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">26.6666667vw</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果切换到iphone 6plus   1vw = 4.41px    </p><p>注意, 要给body重置一下font-size: 16px;</p><p>代表网站：</p><p><a href="https://3g.163.com/">【网易】</a></p><h5 id="其他小技巧"><a href="#其他小技巧" class="headerlink" title="其他小技巧"></a>其他小技巧</h5><ul><li>固比固</li></ul><p>三栏布局, </p><p>利用box-sizing</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span>{</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-class">.left</span>{</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-class">.content</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>:border-box;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-class">.right</span>{</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>利用flex</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-class">.left</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-class">.content</span>{</span><br><span class="line">    <span class="attribute">flex</span>:<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-class">.right</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>设置高度按比例变换</li></ul><ol><li>不设置高度</li></ol><p>盒子不设置高度,图片宽度100%,高度默认按比例缩放</p><p>2.采用padding-top给盒子设置自动,然后用背景图</p><p>借用padding-top来处理,我们知道padding也可以显示背景</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding-top</span>:<span class="number">60%</span>;</span><br></pre></td></tr></tbody></table></figure><p>padding-bottom也可以但是,padding-top更好一点 ,因为可以overflow:hidden ;关闭超出的部分</p><p>3.通过js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> boxWidth = <span class="built_in">parseInt</span>(getComputedStyle(box)[<span class="string">'width'</span>]);</span><br><span class="line">box.style.height = boxWidth+<span class="string">'px'</span></span><br></pre></td></tr></tbody></table></figure><p>补充:</p><p><a href="https://h5.m.taobao.com/#index">https://h5.m.taobao.com/#index</a> 手机淘宝 rem<br><a href="http://m.jd.com/">http://m.jd.com/</a>  手机京东 100%<br><a href="http://jx.tmall.com/">http://jx.tmall.com/</a> 天猫 100%<br><a href="http://3g.163.com/touch/all?nav=1&amp;version=v_standard">http://3g.163.com/touch/all?nav=1&amp;version=v_standard</a>   网易 rem</p><p><a href="http://www.cnblogs.com/2050/p/3877280.html">http://www.cnblogs.com/2050/p/3877280.html</a>  viewport 解析<br>meta解析<br><a href="http://ljinkai.github.io/2015/06/06/mobile-web-skill/">http://ljinkai.github.io/2015/06/06/mobile-web-skill/</a>  移动端布局注意技巧</p><p><a href="https://gs.statcounter.com/browser-market-share">https://gs.statcounter.com/browser-market-share</a>  浏览器使用占比</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>解决进不去github官网</title>
      <link href="2021/03/12/%E8%A7%A3%E5%86%B3%E8%BF%9B%E4%B8%8D%E5%8E%BBgithu%E5%AE%98%E7%BD%91/"/>
      <url>2021/03/12/%E8%A7%A3%E5%86%B3%E8%BF%9B%E4%B8%8D%E5%8E%BBgithu%E5%AE%98%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h1 id="解决github官网进不去"><a href="#解决github官网进不去" class="headerlink" title="解决github官网进不去"></a>解决github官网进不去</h1><p>**</p><p>不能进入GitHub官网的解决办法<br>**<br>一：分别获取你的github.com、github.global.ssl.fastly.net对应的IP（每台电脑的可能不一样）<br>链接:<a href="https://fastly.net.ipaddress.com/github.global.ssl.fastly.net">https://fastly.net.ipaddress.com/github.global.ssl.fastly.net</a></p><p><img src="https://img-blog.csdnimg.cn/20201026121605666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUwNjkzMDM0,size_16,color_FFFFFF,t_70#pic_center"></p><p>链接：<a href="http://github.com.ipaddress.com/">http://github.com.ipaddress.com/</a></p><p><img src="https://img-blog.csdnimg.cn/20201026121955584.png?x-ossprocess=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUwNjkzMDM0,size_16,color_FFFFFF,t_70#pic_center">登录以上两个链接可以看到两个地址<br>分别获取你的github.com、github.global.ssl.fastly.net对应的IP<br>分别为：<br>199.232.69.194<br>140.82.113.3</p><p>二、修改hosts文件<br>文件路径：C:\Windows\System32\drivers\etc<br>找到host文件，接着将<br>140.82.113.3 github.com<br>199.232.69.194 github.global.ssl.fastly.net<br>添加到hosts文件中。</p><p>三、更新DNS缓存<br>打开CMD运行如下命令 ipconfig /flushdns<br>也可以输入：ping github.com<br>看看能不能ping通</p><p>到这里就成功了，然后就可以访问GitHub官网了。<br>————————————————<br>版权声明：本文为CSDN博主「永和|九年」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/m0_50693034/article/details/109287344">https://blog.csdn.net/m0_50693034/article/details/109287344</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欢迎光临</title>
      <link href="2021/03/12/%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4/"/>
      <url>2021/03/12/%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎光临我的博客"><a href="#欢迎光临我的博客" class="headerlink" title="欢迎光临我的博客"></a>欢迎光临我的博客</h1><p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2221385132,2525031384&amp;fm=26&amp;gp=0.jpg"></p><h2 id="第一次搭建博客"><a href="#第一次搭建博客" class="headerlink" title="第一次搭建博客"></a>第一次搭建博客</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
